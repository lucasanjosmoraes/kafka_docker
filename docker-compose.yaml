version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./volumes/zookeeper/log/version-2/:/var/lib/zookeeper/log/version-2
      - ./volumes/zookeeper/data/version-2/:/var/lib/zookeeper/data/version-2

  broker:
    image: confluentinc/cp-kafka:7.0.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      # Create topics automatically when an event is triggered, using default settings.
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # Definition of the protocol used.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # Listeners that will be passed to zookeeper to be consumed by the clients.
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      # Time that coordinator will wait for more consumers to join the group,
      # before starting the first rebalance.
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # Topics will not be created until the cluster size has this factor.
      # Can't be greater than the number of brokers.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.1
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    depends_on:
      - zookeeper
      - broker
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  ksqldb-server:
    image: confluentinc/ksqldb-server:0.24.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - "8088:8088"
    environment:
      # https://docs.ksqldb.io/en/latest/reference/server-configuration/
      KSQL_LISTENERS: 'http://0.0.0.0:8088'
      KSQL_BOOTSTRAP_SERVERS: 'broker:29092'
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.24.0
    container_name: ksqldb-cli
    network_mode: "host"
    depends_on:
      - zookeeper
      - broker
      - schema-registry
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true